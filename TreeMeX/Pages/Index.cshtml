@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Htmx.TagHelpers
@model dendrOnline.Pages.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Westwind.AspNetCore.Markdown
@addTagHelper *, Htmx.TagHelpers
@{
    ViewData["Title"] = "Home page";
}
<!--
<script>

function setDisplay(id, display, width) {
    
    let element = document.getElementById(id);
    if (element) {
        if (display)
            element.style.display = display;
        if (width)
            element.style.width = width;
    }
    
}


function set(editorVisible, contentVisible) {
    
    
    
    if (editorVisible && contentVisible) {
        setDisplay('editor','inline','40%');
        setDisplay('xContent','inline','60%');
    }
    else if (editorVisible && !contentVisible) {
        setDisplay('editor','inline','100%');
        setDisplay('xContent','none','60%');
    }
    else if (!editorVisible && contentVisible) {
        setDisplay('editor','none','40%');
        setDisplay('xContent','inline','100%');
    }
    else {
        setDisplay('editor','none','40%');
        setDisplay('xContent','none','60%');
    }
    
}


function Toggle (id) {
    
    let state = getState();
    
    if (id === 'editor') {
        state.editorVisible = !state.editorVisible;        
    }
    if (id == 'xContent') {
        state.contentVisible = !state.contentVisible;
    }
    set(state.editorVisible, state.contentVisible);
    
}

function getState() {
    let editor = document.getElementById('editor');
    let content = document.getElementById('xContent');
    
    let editorVisible = editor.style.display != 'none';
    let contentVisible = content.style.display != 'none';
    
    return {editorVisible,contentVisible};
}

</script> -->

<div class="text-center">
    
    <h1 class="display-4"><img src="@Model.GitHubUser.AvatarUrl" width="50"/> @Model.GitHubUser.Name </h1>
    <h2>@Model.RepositoryName</h2>
    <h3 id="NoteTitle" hx-swap-oob="true">@Model.CurrentNoteShortName</h3>
    
</div>
<form action="@Url.Page("Index", "Save")" method="post">
    <input type="submit" name="Save" value="save."></input>
    <div style="display: flex;flex-direction: row" hx-get="@Url.Page("Index/?{@Model.}", "Save")"
         hx-trigger="keyup[key=='F7'] from:body" asp-for="PostContent">
        <div style="width: 20%" id="hierarchy">
            <input type="text"
                   asp-for="NoteQuery"
                   id="notequery"
                   autocomplete="off"
                   hx-post hx-page="Index" hx-page-handler="FilterTree"
                   hx-target="#tree"
                   hx-trigger="keyup changed delay:250ms"
                   placeholder=""
                   class="form-control"
                   aria-label="search"
                   asp-for="NoteHierarchy"
                   aria-describedby="search-addon"/>
            <div id="tree">
                <partial name="Shared/Hierarchy" model="@Model.NoteHierarchy"/>
                </div>
        </div>

        <div style="display: flex; flex-direction: column; width: 80%; flex-wrap: wrap">
            <div id="displayToggler"  hx-swap-oob="true">
                <button href="#" hx-get="@Url.Page("Index", "Display")&toggle=editor&note=@Model.CurrentNote" hx-target="#xContent" style="cursor: pointer;padding: 10px">
                    EDIT
                </button>
                <button href="#" hx-get="@Url.Page("Index", "Display")&toggle=content&note=@Model.CurrentNote" hx-target="#xContent" style="cursor: pointer;padding: 10px">
                                    PREVIEW
                                </button>
            </div>
            <div style="width: 100%;display: flex;flex-direction: row">
                <textarea hx-post="@Url.Page("Index")" style="width: 40%;display:inline" hx-trigger="keyup changed delay:250ms" hx-target="#xContent" id="editor" hx-swap-oob="true" asp-for="PostContent" name="PostContent"></textarea>

                <div id="xContent" style="margin: auto 0;width: 60%"><partial name="_Preview"/></div>
            </div>
        </div>

    </div>

</form>

